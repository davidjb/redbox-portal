jobs:
  build:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - node/install:
          node-version: 12.16.0
      - run: npm install --production
      - run: node_modules/.bin/tsc
      - run: (cd angular && npm install)
      - run: (chmod +x dev_build/buildNgApps.sh && dev_build/buildNgApps.sh)
      - persist_to_workspace:
          root: .
          paths:
            - .
  build-bcryptjs:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - node/install:
          node-version: 12.16.0
      - run: npm uninstall bcrypt; npm install bcryptjs --save; npm install --production
      - run: node_modules/.bin/tsc
      - run: (cd angular && npm install)
      - run: (chmod +x dev_build/buildNgApps.sh && dev_build/buildNgApps.sh)
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    machine: true
    steps:
      - docker/install-docker-compose
      - attach_workspace:
           at: /home/circleci/project
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm install 12.16.0 && nvm use 12.16.0
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm use 12.16.0 && node_modules/.bin/tsc -p tsconfig-codecov.json
      - run: (sudo chmod -R 777 . && cd support/integration-testing && sudo mkdir -p .tmp/attachments/staging && sudo chmod -R 777 . && docker-compose -f docker-compose.newman.yml up --abort-on-container-exit --exit-code-from redboxportal && docker-compose -f docker-compose.mocha.yml up --abort-on-container-exit --exit-code-from redboxportal)
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm use 12.16.0 && npm i -g codecov && codecov -t $CODECOV_TOKEN
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm use 12.16.0 && node_modules/.bin/tsc
  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
        node-version: 12.16.0
      - setup_remote_docker
      - attach_workspace:
            at: /home/circleci/project
      - docker/install-docker-compose
      - run: (chmod +x dockerhub_deploy.sh && ./dockerhub_deploy.sh)
      - run:
          command: |
            echo $CIRCLE_BRANCH
            npm pack
            PACKAGE_VERSION=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[", \t]//g')
            RBPORTAL_FILENAME=$(ls redbox-portal-*.tgz)
            curl -v -u $MAVEN_USER:$MAVEN_PASSWORD --upload-file $RBPORTAL_FILENAME "https://nexus-prod.redboxresearchdata.com.au/nexus/repository/maven-snapshots/au/edu/qcif/redbox-portal/${PACKAGE_VERSION}-SNAPSHOT/redbox-portal-${PACKAGE_VERSION}-SNAPSHOT.tgz"  
  deploy-bcryptjs:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - setup_remote_docker
      - attach_workspace:
            at: /home/circleci/project
      - docker/install-docker-compose
      - run: (chmod +x dockerhub_deploy.sh && ./dockerhub_deploy.sh bcryptjs)  
  generate-docs:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "50:0c:a1:7f:b6:64:84:42:01:61:0f:76:3f:e4:78:ff"
      - attach_workspace:
            at: /home/circleci/project
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm install 12.16.0 && nvm use 12.16.0
      - run: export NVM_DIR=/opt/circleci/.nvm && source /opt/circleci/.nvm/nvm.sh && nvm use 12.16.0 && npm run doc-ng2
      - run: 
          command: |
            export NVM_DIR=/opt/circleci/.nvm
            source /opt/circleci/.nvm/nvm.sh
            nvm use 12.16.0 
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@redboxresearchdata.com.au"
            git config user.name "ci-build"
            gh-pages --dotfiles --message "[ci skip] Updating documents" --dist support/docs/generated/ng2
orbs:
  node: circleci/node@4.0.0
  docker: circleci/docker@1.4.0
version: 2.1
workflows:
  build_test_gendocs_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              ignore: /^dependabot.*/
      - generate-docs:
          requires: 
            - test
          filters:
            branches:
              only: 'debug'
  build_bcryptjs_test_gendocs_and_deploy:
    jobs:
      - build-bcryptjs
      - test:
          requires:
            - build-bcryptjs
      - deploy-bcryptjs:
          requires:
            - test
          filters:
            branches:
              ignore: /^dependabot.*/
  release_build_test_gendocs_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - test     
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
  release_bcryptjs_test_gendocs_and_deploy:
    jobs:
      - build-bcryptjs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build-bcryptjs
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-bcryptjs:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/